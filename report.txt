Full report to analyze my data:

Data information:
Data Information Report
Problem Type: Regression
Target Variable: target
Feature Types: {'numeric': [], 'boolean': [], 'text': [], 'categorical': ['id'], 'time': ['date'], 'id': []}
Loss Function: R squared
Evaluation Metrics: ['R2', 'MSE', 'MAE', 'MAPE']
Optional Models: {'linear', 'catboost', 'baseline-average', 'baseline-median'}


features engineering process for the data:
features statistics for the data. Analyzed by groups (text, numeric, categorical) if exists:
** model pre analysis report:
Feature stats:
            col # unique # missing     max   min    avg    std            CI  \
0  target_label    11752         0  343.11  1.13  52.75  61.69  (51.9, 53.6)   

  median     top_vals     bottom_vals  
0  28.69  343,343,342  1.13,1.14,1.15  

top 50 with lowest partial pvalue for numerical feat, based on chi square:
[('num_ts_year_date_cos', 0.0), ('num_ts_mm_21_min_date', 0.0), ('num_ts_mm_7_max_date', 0.0), ('num_ts_mm_21_mean_date', 0.0), ('num_ts_mm_21_median_date', 0.0), ('num_ts_mm_7_median_date', 0.0), ('num_ts_mm_14_min_date', 0.0), ('num_ts_mm_7_mean_date', 0.0), ('num_ts_mm_1000_median_date', 0.0), ('num_ts_mm_5_min_date', 0.0), ('num_ts_mm_1_min_date', 0.0), ('num_ts_mm_1000_mean_date', 0.0), ('num_ts_mm_14_max_date', 0.0), ('num_ts_mm_3_min_date', 0.0), ('num_ts_mm_360_mean_date', 0.0), ('num_ts_mm_5_mean_date', 0.0), ('num_ts_mm_3_median_date', 0.0), ('num_ts_mm_21_max_date', 0.0), ('num_ts_year_date_sin', 0.0), ('num_ts_mm_5_max_date', 0.0), ('num_ts_mm_1000_max_date', 0.0), ('num_ts_mm_7_min_date', 0.0), ('num_ts_mm_5_median_date', 0.0), ('num_ts_mm_2_mean_date', 0.0), ('num_ts_mm_2_max_date', 0.0), ('num_ts_mm_3_mean_date', 0.0), ('num_ts_mm_360_min_date', 0.0), ('num_ts_mm_360_median_date', 0.0), ('num_ts_mm_2_min_date', 0.0), ('num_ts_mm_1000_min_date', 0.0), ('num_ts_mm_14_median_date', 0.0), ('num_ts_mm_360_max_date', 0.0), ('num_ts_mm_14_mean_date', 0.0), ('num_ts_mm_3_max_date', 0.0), ('num_ts_freq_1000_max_date', 4.201235152868076e-299), ('num_ts_freq_1000_mean_date', 4.317885245558097e-52), ('num_ts_freq_360_mean_date', 3.1732870635535534e-36), ('num_ts_quarter_date_cos', 9.529920356548862e-09), ('num_ts_month_date_cos', 1.2023403907105045e-06), ('num_ts_freq_21_max_date', 1.1860151493855797e-05), ('num_ts_month_date_sin', 8.015771150610051e-05), ('num_ts_freq_14_max_date', 0.0007563388686995872), ('num_ts_quarter_date_sin', 0.005629470492948651), ('num_ts_freq_21_mean_date', 0.07178202429083808), ('num_ts_freq_14_mean_date', 0.08501897745231438), ('num_ts_freq_2_max_date', 0.7148768497322433), ('num_ts_freq_2_mean_date', 0.7234367992907222), ('num_ts_freq_3_max_date', 0.8241845375479053), ('num_ts_freq_7_mean_date', 0.8895845958026419), ('num_ts_freq_3_mean_date', 0.9463447475244731)]

top 50 with lowest partial pvalue for categorical feat based on chi square:
[('id', 0.0), ('ts_year_date', 0.0), ('ts_month_date', 6.354532348699576e-37), ('ts_quarter_date', 1.0993527446945032e-33), ('ts_dayinweek_date', 0.9999999999999993), ('ts_dayinmonth_date', 1.0)]

Training models and choosing the best one
Model results compared - showing the best out of each type after CV & HP tuning: 
+-------+-----------------------+--------------------+---------------------+--------------------------------+
|  type |         model         | mean_squared_error | mean_absolute_error | mean_absolute_percentage_error |
+-------+-----------------------+--------------------+---------------------+--------------------------------+
|  test |     BaselineModel     | 3864.2341544933865 |  43.49770716167526  |       2.7776498001920737       |
|  test |     CatboostModel     | 5.182267498095305  |  1.3307961187657606 |      0.041326348011583136      |
|  test | LinearRegressionModel | 2.5117124660914643 |  0.7081301313929235 |      0.01716025947498151       |
| train |     BaselineModel     | 3863.8457542610863 |  43.49424009250454  |       2.7773870602924466       |
| train |     CatboostModel     | 4.380237316759342  |  1.2708051259762947 |       0.0402800971097677       |
| train | LinearRegressionModel | 2.487117786935552  |  0.7054233949301103 |      0.01711424570481306       |
+-------+-----------------------+--------------------+---------------------+--------------------------------+


Post model analysis - analyzing results of the chosen model: 
Learning curve by training examples
+-------------+--------------------+-----------------------+------------------+-----------------+
| train_sizes | train_scores_mean  |    train_scores_std   | test_scores_mean | test_scores_std |
+-------------+--------------------+-----------------------+------------------+-----------------+
|     875     | 0.9993647329253228 | 3.346351316193541e-05 |       nan        |       nan       |
|     2845    |        nan         |          nan          |       nan        |       nan       |
|     4815    |        nan         |          nan          |       nan        |       nan       |
|     6785    |        nan         |          nan          |       nan        |       nan       |
|     8756    |        nan         |          nan          |       nan        |       nan       |
+-------------+--------------------+-----------------------+------------------+-----------------+


Boostrap metrics, sample 20 results:
+--------------------+---------------------+--------------------------------+
| mean_squared_error | mean_absolute_error | mean_absolute_percentage_error |
+--------------------+---------------------+--------------------------------+
| 1.6296633747404405 |  0.6408176898559378 |      0.016494964932699637      |
| 1.9616839857990687 |  0.7066774759274645 |      0.014606039536726186      |
| 2.0759624309843927 |  0.7158178992319927 |      0.015259075099322068      |
| 1.860837993755772  |  0.6487475946516722 |      0.015263451113541722      |
| 1.740660031127277  |  0.7247208054865396 |      0.014714643216499805      |
| 1.587924372156396  |  0.678170806516739  |      0.01411614682838589       |
| 1.341671668470933  |  0.558865171812923  |      0.01630136695435737       |
| 1.7792134152839731 |  0.6768342860053881 |      0.01281350817971903       |
| 2.8306389731207644 |  0.8588437822988587 |      0.016200662260469626      |
| 2.296957558889919  |  0.6170247986994561 |      0.013543954598722884      |
| 1.6299482314739078 |  0.5977835413811043 |      0.012464661325724378      |
| 3.1330132661964045 |  0.8211983005836054 |      0.014754001803705062      |
| 2.547495399711485  |  0.6697189752753016 |      0.014836540949347967      |
| 1.226165465734892  |  0.6071025086835444 |      0.016205954652298588      |
| 2.790646466697856  |  0.7138562568554353 |      0.015350454600926955      |
| 1.4043494347326082 |  0.5670479644561769 |      0.012344229532771143      |
| 2.1149487921110848 |  0.6699408736801162 |      0.01586877795331148       |
| 0.9720141151536601 |  0.5521254272116461 |      0.012722346991605047      |
| 1.4524535114047894 |  0.6043141649187324 |      0.014843527450646361      |
| 2.6695390664607284 |  0.7371340855657433 |      0.016818308765391005      |
+--------------------+---------------------+--------------------------------+

Trying to find weaknesses in the model by training models on the error:
Most important features by catboost:
+----------------------------+------------+
|          Feature           | Importance |
+----------------------------+------------+
|    num_ts_mm_7_min_date    |    8.0     |
|  num_ts_freq_7_mean_date   |    6.0     |
|  num_ts_mm_7_median_date   |    5.0     |
|    num_ts_mm_7_max_date    |    5.0     |
| num_ts_freq_1000_mean_date |    5.0     |
|    index_ts_month_date     |    5.0     |
|   num_ts_mm_14_min_date    |    4.0     |
|    num_ts_year_date_cos    |    3.0     |
|   num_ts_mm_5_mean_date    |    3.0     |
|   num_ts_mm_3_mean_date    |    3.0     |
| num_ts_dayinmonth_date_sin |    3.0     |
| num_ts_mm_360_median_date  |    3.0     |
|  num_ts_mm_3_median_date   |    3.0     |
|    num_ts_year_date_sin    |    3.0     |
|  num_ts_mm_1000_mean_date  |    3.0     |
| num_ts_mm_1000_median_date |    3.0     |
|  num_ts_mm_360_mean_date   |    2.0     |
|   num_ts_mm_21_min_date    |    2.0     |
|  num_ts_freq_2_mean_date   |    2.0     |
|  num_ts_freq_3_mean_date   |    2.0     |
| num_ts_freq_360_mean_date  |    2.0     |
|     index_ts_year_date     |    2.0     |
|   num_ts_mm_14_max_date    |    2.0     |
|    num_ts_mm_3_max_date    |    2.0     |
|    num_ts_mm_5_min_date    |    2.0     |
|    num_ts_mm_5_max_date    |    1.0     |
|   num_ts_mm_21_max_date    |    1.0     |
| num_ts_dayinmonth_date_cos |    1.0     |
|  num_ts_freq_21_mean_date  |    1.0     |
|   num_ts_freq_3_max_date   |    1.0     |
|   num_ts_month_date_cos    |    1.0     |
|  num_ts_mm_1000_max_date   |    1.0     |
|  num_ts_mm_1000_min_date   |    1.0     |
|   num_ts_mm_360_max_date   |    1.0     |
|   num_ts_mm_360_min_date   |    1.0     |
|    num_ts_mm_2_min_date    |    1.0     |
|  index_ts_dayinmonth_date  |    1.0     |
|    num_ts_mm_2_max_date    |    1.0     |
|  num_ts_mm_14_median_date  |    1.0     |
|   num_ts_mm_14_mean_date   |    1.0     |
|   num_ts_mm_2_mean_date    |    1.0     |
|    num_ts_mm_3_min_date    |    1.0     |
|   num_ts_mm_7_mean_date    |    1.0     |
|  index_ts_dayinweek_date   |    0.0     |
| num_ts_freq_1000_max_date  |    0.0     |
|  num_ts_mm_5_median_date   |    0.0     |
|   index_ts_quarter_date    |    0.0     |
|  num_ts_freq_21_max_date   |    0.0     |
|  num_ts_freq_14_mean_date  |    0.0     |
|  num_ts_freq_14_max_date   |    0.0     |
+----------------------------+------------+

Print of tree to look for potential segments with high error (use with caution)
|--- index_ts_year_date_3 <= 4.68
|   |--- value: [0.02]
|--- index_ts_year_date_3 >  4.68
|   |--- index_ts_dayinmonth_date_26 <= 1.00
|   |   |--- value: [0.01]
|   |--- index_ts_dayinmonth_date_26 >  1.00
|   |   |--- value: [0.01]


