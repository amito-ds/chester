The report shows run of an ml model or analysis or both
Data information:
Data Information Report
Problem Type: Binary regression
Target Variable: target
Feature Types: {'numeric': ['pclass', 'age', 'sibsp', 'parch', 'fare'], 'boolean': ['adult_male', 'alone'], 'text': [], 'categorical': ['sex', 'embarked', 'class', 'who', 'deck', 'embark_town'], 'time': [], 'id': []}
Loss Function: Cross entropy
Evaluation Metrics: ['MSE', 'ROC', 'MAE', 'MAPE']
Optional Models: {'logistic', 'catboost', 'baseline-median', 'baseline-average', 'linear'}


features engineering process for the data:
features statistics for the data. Analyzed by groups (text, numeric, categorical) if exists:

Numerical Feature statistics:
Feature stats:
             col # unique # missing     max   min   avg    std            CI  \
5  is_adult_male        2         0     1.0   0.0   0.6   0.49  (0.58, 0.63)   
4       num_fare      248         0  512.33   0.0  32.2  49.69  (29.5, 34.9)   
2      num_sibsp        7         0     8.0   0.0  0.52    1.1  (0.46, 0.58)   
0     num_pclass        3         0     3.0   1.0  2.31   0.84  (2.26, 2.35)   
6       is_alone        2         0     1.0   0.0   0.6   0.49  (0.58, 0.63)   
3      num_parch        7         0     6.0   0.0  0.38   0.81  (0.34, 0.43)   
1        num_age       88       177    80.0  0.42  29.7  14.53  (28.9, 30.5)   

  median        top_vals     bottom_vals  
5    1.0             1,0             0,1  
4  14.45     512,263,262    0.0,4.01,5.0  
2    0.0           8,5,4           0,1,2  
0    3.0           3,2,1           1,2,3  
6    1.0             1,0             0,1  
3    0.0           6,5,4           0,1,2  
1   28.0  80.0,74.0,71.0  0.42,0.67,0.75  


Categorical Feature statistics:
Feature stats:
           col # unique # missing                       Distribution  \
4         deck        7       688  C: 29%, B: 23%, D: 16%, E: 16%...   
5  embark_town        3         2  Southampton: 72%, Cherbourg: 1...   
1     embarked        3         2              S: 72%, C: 19%, Q: 9%   
3          who        3         0  man: 60%, woman: 30%, child: 9...   
0          sex        2         0             male: 65%, female: 35%   
2        class        3         0  Third: 55%, First: 24%, Second...   

                              Sample Top 5 values coverage  
4                            C, B, G                   92%  
5  Southampton, Queenstown, Cherb...                  100%  
1                            Q, C, S                  100%  
3                  woman, child, man                  100%  
0                       female, male                  100%  
2               First, Third, Second                  100%  

** model pre analysis report:
Feature stats:
            col # unique # missing max min   avg   std            CI median  \
0  target_label        2         0   1   0  0.38  0.49  (0.36, 0.41)    0.0   

  top_vals bottom_vals  
0      1,0         0,1  

top 50 with lowest partial pvalue for numerical feat, based on chi square:
[('is_adult_male', 1.3961564139018578e-61), ('num_pclass', 4.5492517112987287e-23), ('num_fare', 4.6558557424690705e-18), ('is_alone', 1.9726543846517183e-09), ('num_sibsp', 1.5585810465902116e-06), ('num_parch', 9.703526421039997e-05), ('num_age', 0.00011174173926716125)]

top 50 with lowest partial pvalue for categorical feat based on chi square:
[('who', 2.2227620817798914e-62), ('sex', 1.1973570627755645e-58), ('class', 4.549251711298793e-23), ('embarked', 1.769922284120912e-06), ('embark_town', 1.769922284120912e-06), ('deck', 0.21476470552598992)]

Training models and choosing the best one
Model results compared - showing the best out of each type after CV & HP tuning: 
+-------+-------------------------+---------------------+--------------------+---------------------+--------------------------------+
|  type |          model          |  mean_squared_error |   roc_auc_score    | mean_absolute_error | mean_absolute_percentage_error |
+-------+-------------------------+---------------------+--------------------+---------------------+--------------------------------+
|  test |      BaselineModel      | 0.23505398575472772 |        0.5         | 0.46973878805146124 |       1057889697377105.2       |
|  test |      CatboostModel      | 0.12915432345831346 | 0.8670152488704084 | 0.26487562738098075 |       614634751474744.2        |
|  test |  LinearRegressionModel  |  0.2217768529577607 | 0.6827501136355785 |  0.4491138910026088 |       1004577148976117.4       |
|  test | LogisticRegressionModel |  0.1331816995791773 | 0.8605418127837547 | 0.26062022121504214 |       586840720227691.2        |
| train |      BaselineModel      | 0.23468480229673347 |        0.5         | 0.46936960459346694 |       1056926388173087.8       |
| train |      CatboostModel      | 0.11241608502047755 | 0.8995660854369893 |  0.2443909090508894 |       566355224026632.5        |
| train |  LinearRegressionModel  | 0.22105630494490983 | 0.6857375750637993 | 0.44846480072846984 |       1003250462580042.0       |
| train | LogisticRegressionModel | 0.12312157139254494 | 0.8748246661389778 | 0.25050036985297164 |       564076674222855.9        |
+-------+-------------------------+---------------------+--------------------+---------------------+--------------------------------+


Post model analysis - analyzing results of the chosen model: 
Top 100 Feature importance (in %, 100 = the most important one):
{'index_who': 100, 'index_class': 44, 'is_adult_male': 27, 'num_fare': 21, 'index_sex': 19, 'num_pclass': 18, 'index_embarked': 15, 'index_deck': 10, 'num_sibsp': 10, 'num_age': 9, 'index_embark_town': 8, 'num_parch': 6, 'is_alone': 2}

Learning curve by training examples
+-------------+----------------------+-----------------------+----------------------+----------------------+
| train_sizes |  train_scores_mean   |    train_scores_std   |   test_scores_mean   |   test_scores_std    |
+-------------+----------------------+-----------------------+----------------------+----------------------+
|      56     | -0.09071767147496843 |  0.017253370810482106 | -0.1587054636315432  | 0.017459866991501947 |
|     184     | -0.10555776736099318 |  0.005590539602081954 | -0.13738639491275087 | 0.016124039111934583 |
|     312     | -0.11221426280050213 | 0.0063455474975481875 |  -0.129834341447649  | 0.015342957457774547 |
|     440     | -0.11463190582932994 | 0.0019658461300998188 | -0.13094910026163795 | 0.010681457535548253 |
|     569     | -0.11293804395607623 |  0.003375733208515742 | -0.1286680882352976  | 0.010195440809982725 |
+-------------+----------------------+-----------------------+----------------------+----------------------+


Boostrap metrics, sample 20 results:
+---------------------+--------------------+---------------------+--------------------------------+
|  mean_squared_error |   roc_auc_score    | mean_absolute_error | mean_absolute_percentage_error |
+---------------------+--------------------+---------------------+--------------------------------+
| 0.14362513222575968 | 0.8673501412281619 |  0.2952910000698505 |       689473805129912.8        |
|  0.1619025035820888 | 0.8292533659730722 | 0.30519435359229197 |       654796989799436.5        |
| 0.13485821786206156 | 0.8857621090072183 |  0.2800681559540972 |       638743857525462.6        |
| 0.13615073226680005 | 0.8737171592775039 | 0.27397123948036833 |       537646804387633.94       |
| 0.14904630083947537 | 0.8509852216748768 | 0.29966399878337796 |       648239343060222.5        |
| 0.14105929593985864 | 0.8667507356031947 |  0.2856530012642682 |       586850238238587.0        |
| 0.13438551926075273 | 0.8676562499999999 |  0.2742397889504219 |       634875886563193.0        |
| 0.16169200530041383 |     0.8296875      |  0.3055934937162618 |       686104710814490.4        |
|  0.175698696417439  | 0.8296868727418707 | 0.32825321304048094 |       626656744879678.4        |
| 0.17387078165541575 | 0.8023375553496035 |  0.325578206116341  |       700923862108156.0        |
| 0.12899106378601874 | 0.9003033790145413 |  0.2792691455392235 |       647611223300196.8        |
| 0.11695000898011468 | 0.9191213685595708 |  0.2576184370744132 |       559411732501308.06       |
|  0.1333631774263777 | 0.8809523809523809 |  0.262567714386943  |       525168855789516.6        |
| 0.17168102798813742 | 0.8130557589706037 |  0.3118419531618853 |       717873073109796.0        |
|  0.1410461834512675 | 0.8834889643463497 |  0.2808392256074584 |       594734654708239.0        |
|  0.1378580413447617 | 0.8885799608691175 | 0.28622652986782066 |       606638759586590.5        |
| 0.16721080625904386 | 0.833198051948052  |  0.3156574796943293 |       629715799153367.2        |
| 0.13172627413585156 | 0.8893308853529172 |  0.2737093883969611 |       551807370774391.06       |
| 0.12508569217791143 | 0.9028241724870939 | 0.26458471266837885 |       552124853802961.6        |
| 0.13394790838035442 | 0.8867952969550799 |  0.282831450186464  |       564591031120559.6        |
+---------------------+--------------------+---------------------+--------------------------------+

Trying to find weaknesses in the model by training models on the error:
Most important features by catboost:
+-------------------+------------+
|      Feature      | Importance |
+-------------------+------------+
|   is_adult_male   |    34.0    |
|     index_who     |    21.0    |
|    index_class    |    12.0    |
|     num_pclass    |    8.0     |
|     num_sibsp     |    5.0     |
|      num_fare     |    5.0     |
|     index_sex     |    4.0     |
|      num_age      |    4.0     |
|     index_deck    |    4.0     |
|     num_parch     |    1.0     |
| index_embark_town |    1.0     |
|   index_embarked  |    0.0     |
|      is_alone     |    0.0     |
+-------------------+------------+

Print of tree to look for potential segments with high error (use with caution)
|--- index_embark_town_1 <= 0.50
|   |--- index_sex_0 <= 0.50
|   |   |--- value: [0.19]
|   |--- index_sex_0 >  0.50
|   |   |--- value: [1.28]
|--- index_embark_town_1 >  0.50
|   |--- index_embark_town_0 <= 25.79
|   |   |--- value: [1.96]
|   |--- index_embark_town_0 >  25.79
|   |   |--- value: [1.62]


