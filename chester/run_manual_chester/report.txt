Full report to analyze my data:

Data information:
Data Information Report
Problem Type: Regression
Target Variable: target
Feature Types: {'numeric': [], 'boolean': [], 'text': [], 'categorical': ['id'], 'time': ['date'], 'id': []}
Loss Function: R squared
Evaluation Metrics: ['R2', 'MSE', 'MAE', 'MAPE']
Optional Models: {'linear', 'baseline-median', 'baseline-average', 'catboost'}


features engineering process for the data:
features statistics for the data. Analyzed by groups (text, numeric, categorical) if exists:
** model pre analysis report:
Feature stats:
            col # unique # missing     max   min    avg    std            CI  \
0  target_label    11752         0  343.11  1.13  52.75  61.69  (51.9, 53.6)   

  median     top_vals     bottom_vals  
0  28.69  343,343,342  1.13,1.14,1.15  

top 50 with lowest partial pvalue for numerical feat, based on chi square:
[('num_ts_mm_360_median_date', 0.0), ('num_ts_mm_3_mean_date', 0.0), ('num_ts_mm_1000_median_date', 0.0), ('num_ts_mm_21_median_date', 0.0), ('num_ts_mm_14_max_date', 0.0), ('num_ts_mm_1000_min_date', 0.0), ('num_ts_mm_21_min_date', 0.0), ('num_ts_mm_7_mean_date', 0.0), ('num_ts_mm_3_min_date', 0.0), ('num_ts_mm_5_max_date', 0.0), ('num_ts_mm_21_mean_date', 0.0), ('num_ts_mm_1000_mean_date', 0.0), ('num_ts_mm_7_max_date', 0.0), ('num_ts_mm_2_mean_date', 0.0), ('num_ts_mm_3_median_date', 0.0), ('num_ts_mm_7_min_date', 0.0), ('num_ts_mm_5_mean_date', 0.0), ('num_ts_mm_1000_max_date', 0.0), ('num_ts_mm_2_max_date', 0.0), ('num_ts_year_date_cos', 0.0), ('num_ts_year_date_sin', 0.0), ('num_ts_mm_1_min_date', 0.0), ('num_ts_mm_360_max_date', 0.0), ('num_ts_mm_3_max_date', 0.0), ('num_ts_mm_14_median_date', 0.0), ('num_ts_mm_14_min_date', 0.0), ('num_ts_mm_21_max_date', 0.0), ('num_ts_mm_360_min_date', 0.0), ('num_ts_mm_5_min_date', 0.0), ('num_ts_mm_2_min_date', 0.0), ('num_ts_mm_7_median_date', 0.0), ('num_ts_mm_360_mean_date', 0.0), ('num_ts_mm_5_median_date', 0.0), ('num_ts_mm_14_mean_date', 0.0), ('num_ts_freq_1000_max_date', 3.3430528321972116e-291), ('num_ts_freq_1000_mean_date', 1.1530572207674088e-66), ('num_ts_freq_360_mean_date', 3.0119632240724374e-18), ('num_ts_month_date_sin', 4.635098901247686e-09), ('num_ts_freq_21_max_date', 9.165816637013257e-09), ('num_ts_quarter_date_cos', 2.004580858116651e-07), ('num_ts_quarter_date_sin', 2.1076845083679976e-06), ('num_ts_freq_14_max_date', 0.0001277569400434675), ('num_ts_month_date_cos', 0.002626748799598919), ('num_ts_freq_21_mean_date', 0.030995659254601845), ('num_ts_freq_2_max_date', 0.10094402452072732), ('num_ts_freq_2_mean_date', 0.13868211891991702), ('num_ts_freq_3_max_date', 0.427481859947307), ('num_ts_freq_14_mean_date', 0.48824725356813214), ('num_ts_freq_3_mean_date', 0.7465191312902166), ('num_ts_freq_7_mean_date', 0.8670109443792032)]

top 50 with lowest partial pvalue for categorical feat based on chi square:
[('id', 0.0), ('ts_year_date', 0.0), ('ts_month_date', 5.631326425633119e-35), ('ts_quarter_date', 1.733974575806688e-33), ('ts_dayinweek_date', 0.9999999999999999), ('ts_dayinmonth_date', 1.0)]

Training models and choosing the best one
Model results compared - showing the best out of each type after CV & HP tuning: 
+-------+-----------------------+--------------------+---------------------+--------------------------------+
|  type |         model         | mean_squared_error | mean_absolute_error | mean_absolute_percentage_error |
+-------+-----------------------+--------------------+---------------------+--------------------------------+
|  test |     BaselineModel     | 3809.4218970894603 |  43.15560944245844  |       2.7588529918306652       |
|  test |     CatboostModel     | 328.9068598943738  |  10.282417841817471 |       0.5865410802411034       |
|  test | LinearRegressionModel | 2.467696994385316  |  0.7059621451831601 |      0.017156606355472705      |
| train |     BaselineModel     | 3808.1649030709405 |  43.152366035197694 |       2.758182599296257        |
| train |     CatboostModel     | 323.9803010310266  |  10.242055171850911 |       0.5854376234673778       |
| train | LinearRegressionModel |  2.43801474290918  |  0.7037282227241648 |      0.01713899416141797       |
+-------+-----------------------+--------------------+---------------------+--------------------------------+


Post model analysis - analyzing results of the chosen model: 
Learning curve by training examples
+-------------+--------------------+---------------------+------------------+-----------------+
| train_sizes | train_scores_mean  |   train_scores_std  | test_scores_mean | test_scores_std |
+-------------+--------------------+---------------------+------------------+-----------------+
|     875     | 0.9993084342006217 | 8.0201439838401e-05 |       nan        |       nan       |
|     2845    |        nan         |         nan         |       nan        |       nan       |
|     4815    |        nan         |         nan         |       nan        |       nan       |
|     6785    |        nan         |         nan         |       nan        |       nan       |
|     8756    |        nan         |         nan         |       nan        |       nan       |
+-------------+--------------------+---------------------+------------------+-----------------+


Boostrap metrics, sample 20 results:
+--------------------+---------------------+--------------------------------+
| mean_squared_error | mean_absolute_error | mean_absolute_percentage_error |
+--------------------+---------------------+--------------------------------+
| 1.8155719005101596 |  0.6255026431629016 |      0.014017849769494762      |
| 3.479983649834303  |  0.6127865583256881 |      0.01437456837504531       |
| 1.5225182376184239 |  0.5069513822065798 |      0.013839800439705861      |
| 2.839539960958269  |  0.7748998051830032 |      0.01661509767031087       |
|  3.74011754439155  |  0.7633535131705758 |      0.014139933938098013      |
| 1.8808826656881168 |  0.5738863361376532 |      0.012876643048942857      |
|  2.09219806183607  |  0.649878769945684  |      0.013532816214222625      |
| 1.5090633843490346 |  0.6342463001520536 |      0.013292749779149588      |
| 1.7589771266046728 |  0.5944311012481052 |      0.01334447635517114       |
| 2.1709432953924965 |  0.6896403012752611 |      0.011904301685539569      |
| 2.587230787856248  |  0.702048284311079  |      0.013664661718387667      |
| 1.869095728537517  |  0.6455805746958703 |      0.01645459407262821       |
| 1.6734135421832794 |  0.6694391097271482 |      0.016049224197034792      |
| 0.8798942351135391 |  0.5045126589186968 |      0.013441508238393147      |
| 0.8587737359644751 |  0.5216079165641961 |      0.015233393665484356      |
| 3.216209847254504  |  0.6747401253877843 |      0.016184867737399383      |
| 1.295742554222064  |  0.5708195573097626 |      0.01432113755668571       |
| 2.1976685270186427 |  0.5523074765465357 |      0.01229582652938885       |
| 1.7573020473631065 |  0.6109782759890403 |      0.012478360064655233      |
| 1.412946532096237  |  0.6136669592492602 |      0.012598457265755108      |
+--------------------+---------------------+--------------------------------+

Trying to find weaknesses in the model by training models on the error:
Most important features by catboost:
+----------------------------+------------+
|          Feature           | Importance |
+----------------------------+------------+
| num_ts_freq_1000_mean_date |    5.0     |
|   num_ts_mm_2_mean_date    |    5.0     |
| num_ts_freq_360_mean_date  |    4.0     |
|  num_ts_freq_7_mean_date   |    4.0     |
|   num_ts_mm_5_mean_date    |    4.0     |
|   num_ts_mm_3_mean_date    |    4.0     |
|  num_ts_mm_7_median_date   |    4.0     |
|   num_ts_mm_14_mean_date   |    3.0     |
|  index_ts_dayinweek_date   |    3.0     |
|  num_ts_freq_21_mean_date  |    3.0     |
|    num_ts_year_date_sin    |    3.0     |
|    index_ts_month_date     |    3.0     |
|    num_ts_mm_2_min_date    |    3.0     |
|    num_ts_mm_7_max_date    |    3.0     |
|    num_ts_mm_7_min_date    |    3.0     |
|    num_ts_mm_3_max_date    |    3.0     |
|   num_ts_mm_21_min_date    |    3.0     |
|    num_ts_mm_5_max_date    |    3.0     |
|  num_ts_mm_360_mean_date   |    2.0     |
|   num_ts_mm_21_max_date    |    2.0     |
|   num_ts_mm_14_min_date    |    2.0     |
|   num_ts_mm_7_mean_date    |    2.0     |
|     index_ts_year_date     |    2.0     |
| num_ts_mm_360_median_date  |    2.0     |
| num_ts_mm_1000_median_date |    2.0     |
|    num_ts_mm_2_max_date    |    2.0     |
|  num_ts_quarter_date_sin   |    2.0     |
|  num_ts_mm_14_median_date  |    2.0     |
|   num_ts_mm_360_max_date   |    1.0     |
|   num_ts_mm_360_min_date   |    1.0     |
|  num_ts_mm_1000_mean_date  |    1.0     |
|  num_ts_mm_21_median_date  |    1.0     |
|   num_ts_freq_2_max_date   |    1.0     |
|   num_ts_mm_21_mean_date   |    1.0     |
| num_ts_dayinmonth_date_cos |    1.0     |
|   num_ts_month_date_sin    |    1.0     |
|    num_ts_mm_3_min_date    |    1.0     |
|   num_ts_month_date_cos    |    1.0     |
|  num_ts_quarter_date_cos   |    1.0     |
|    num_ts_year_date_cos    |    1.0     |
|    num_ts_mm_1_min_date    |    1.0     |
|   index_ts_quarter_date    |    1.0     |
|    num_ts_mm_5_min_date    |    1.0     |
|  num_ts_mm_5_median_date   |    1.0     |
|  num_ts_mm_3_median_date   |    0.0     |
| num_ts_freq_1000_max_date  |    0.0     |
|  index_ts_dayinmonth_date  |    0.0     |
|  num_ts_freq_21_max_date   |    0.0     |
|  num_ts_freq_14_mean_date  |    0.0     |
|  num_ts_freq_14_max_date   |    0.0     |
+----------------------------+------------+

Print of tree to look for potential segments with high error (use with caution)
|--- index_ts_dayinmonth_date_27 <= 12.81
|   |--- value: [0.02]
|--- index_ts_dayinmonth_date_27 >  12.81
|   |--- index_ts_year_date_4 <= 76.12
|   |   |--- value: [0.01]
|   |--- index_ts_year_date_4 >  76.12
|   |   |--- value: [0.01]


